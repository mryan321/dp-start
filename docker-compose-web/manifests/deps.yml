version: '3.3'
services:
  mongodb:
    image: mongo:3.6
    ports:
      - 27017:27017
    volumes:
      # Load init script to ensure dbs and collections are created
      - ../mongodb/entrypoint-initdb.d/init.js:/docker-entrypoint-initdb.d/init.js:ro
  zookeeper-1:
    image: confluentinc/cp-zookeeper:6.0.0
    expose:
      - 2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka-1:
    image: confluentinc/cp-kafka:6.0.0
    expose:
      - 19092 # exposed port to docker network so that the broker is reachable by other brokers, value needs to match PLAINTEXT port
    ports:
      - 9092:9092 # map localhost port so that broker is reachable from the host, values needs to match PLAINTEXT_HOST port
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  kafka-2:
    image: confluentinc/cp-kafka:6.0.0
    expose:
      - 19092 # exposed port to docker network so that the broker is reachable by other brokers, value needs to match PLAINTEXT port
    ports:
      - 9093:9093 # map localhost port so that broker is reachable from the host, values needs to match PLAINTEXT_HOST port
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:19092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  kafka-3:
    image: confluentinc/cp-kafka:6.0.0
    expose:
      - 19092 # exposed port to docker network so that the broker is reachable by other brokers, value needs to match PLAINTEXT port
    ports:
      - 9094:9094 # map localhost port so that broker is reachable from the host, values needs to match PLAINTEXT_HOST port
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:19092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  postgres:
    build: ../postgres
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - 5432:5432
  minio:
    image: 'bitnami/minio:latest'
    volumes:
      - ../minio/data:/data
    ports:
      - '9001:9000'
    environment:
      - MINIO_ACCESS_KEY=minio-access-key
      - MINIO_SECRET_KEY=minio-secret-key
      - MINIO_DEFAULT_BUCKETS=public-bucket,private-bucket
  vault:
    image: 'hashicorp/vault:latest'
    ports:
      - '8200:8200'
    entrypoint: vault server -dev -dev-kv-v1
    volumes:
      - ../vault/config:/vault/config
    environment:
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_DEV_ROOT_TOKEN_ID=0000-0000-0000-0000
  elasticsearch:
    image: elasticsearch:2.4.2
    ports:
     - "9300:9300"
     - "9200:9200"
    environment:
     - "discovery.type=single-node"
  cmdelasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.0
    ports:
      # Set alternative ports to prevent port clash.
      - 10300:9300
      - 10200:9200
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  sitewideelasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    ports:
      # Set alternative ports to prevent port clash.
      - 11300:9300
      - 11200:9200
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
  highcharts:
    image: onsdigital/highcharts-export-node
    ports:
     - "9999:8080"
  mathjax:
    image: onsdigital/mathjax-api
    ports:
      - "8888:8080"
  redis:
    image: redis:6
    command: redis-server --requirepass default
    ports:
      - "6379:6379"